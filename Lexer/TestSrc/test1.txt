note
    description: "test_project application root class"
    date: "$Date$"
    revision: "$Revision$"

frozen class
    APPLICATION

inherit
    ARGUMENTS_32

create
    make

feature {NONE} -- Initialization

    make
            -- Run application.
        local
            str1 : STRING
            str2 : STRING
            a, b: INTEGER
            arr1, arr2, arr3: ARRAY[INTEGER]
            i : INTEGER
        do
            --| Add your code here
            --print ("Hello Eiffel World!%N")

            create arr1.make_filled(0, 0, 3);
            create arr2.make_filled(1, 0, 5);

            print("arr1.length = ")
            Io.put_integer (arr1.count)
            Io.new_line
            from
                i := 0
            until
                i >= arr1.count
            loop
                Io.put_integer (arr1[i])
                print(" ")
                i := i+1
            end
            Io.new_line

            print("arr2.length = ");
            Io.put_integer (arr2.count)
            Io.new_line
            from
                i := 0
            until
                i >= arr2.count
            loop
                Io.put_integer (arr2[i])
                print(" ")
                i := i+1
            end
            Io.new_line
            Io.new_line

            print("arr1 := arr2");
            Io.new_line
            --print("arr2 := arr3");
            --Io.new_line

            arr1 := arr2;
            --arr2 := arr3;
            arr1[0] := 1234;
            arr2[1] := 4321;

            print("arr1.length = ")
            Io.put_integer (arr1.count)
            Io.new_line
            from
                i := 0
            until
                i >= arr1.count
            loop
                Io.put_integer (arr1[i])
                print(" ")
                i := i+1
            end
            Io.new_line

            print("arr2.length = ");
            Io.put_integer (arr2.count)
            Io.new_line
            from
                i := 0
            until
                i >= arr2.count
            loop
                Io.put_integer (arr2[i])
                print(" ")
                i := i+1
            end
            Io.new_line


            --strings
            str1 := ":3";
            str2 := "Meow";
            print("str1: ");
            Io.put_string (str1);
            Io.new_line
            print("str2: ");
            Io.put_string (str2);
            Io.new_line
            str1 := str2;
            str2 := ":33";
            print("str1: ");
            Io.put_string (str1);
            Io.new_line
            print("str2: ");
            Io.put_string (str2);
            Io.new_line

            --ints

            a := 10;
            b := 5;
            print("a: ");
            Io.put_integer (a);
            Io.new_line
            print("b: ");
            Io.put_integer (b);
            Io.new_line
            a := b;
            b := 10;
            print("a: ");
            Io.put_integer (a);
            Io.new_line
            print("b: ");
            Io.put_integer (b);
            Io.new_line
            Io.new_line

            print_meow(-3)
            Io.new_line
            print_meow(7)

        end
feature {NONE}
    j : INTEGER

    print_meow (more : INTEGER)
        do
            if more <= 0
            then
                Io.put_string (":c")
            else
                Io.put_string ("Me")
                from
                    j := more
                until
                    j <= 0
                loop
                    Io.put_string ("o")
                    j := j-1
                end
                Io.put_string ("w")
            end
        end

end
